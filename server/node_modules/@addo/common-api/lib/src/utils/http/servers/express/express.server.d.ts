import Express from "express";
import { EndpointConfig, ExpressJsMicroservice } from "./expressjs.microservice";
export declare class ExpressServer {
    app: Express.Express;
    private routes;
    private cronJobs;
    /**
     * Create a Express server with all routes
     *
     * @example
     * import { Response } from "../../models/response";
     * import { ExpressServer } from "./express.server";
     * import { ExpressJsMicroservice, HttpMethod } from "./expressjs.microservice";
     *
     * let endpoint = new ExpressJsMicroservice(
     *    { method: HttpMethod.GET, route: '/hello-world' },
     *    (http) => Promise.resolve<Response<string>>(new Response<string>('Hello world'))
     * );
     * let endpoint1 = new ExpressJsMicroservice(
     *    { method: HttpMethod.GET, route: '/hello-galaxy' },
     *    (http) => Promise.resolve<Response<string>>(new Response<string>('Hello galaxy'))
     * );
     *
     * let server = new ExpressServer(endpoint, endpoint1);
     * server.addMicroservice(
     *    new ExpressJsMicroservice(
     *        { method: HttpMethod.GET, route: '/hello-universe' },
     *        (http) => Promise.resolve<Response<string>>(new Response<string>('Hello universe!'))
     *    )
     * );
     * server.start(8080);
     */
    constructor(...endpoints: ExpressJsMicroservice<any, any>[]);
    getRoutes(): EndpointConfig[];
    start(port?: number): void;
    addMicroservice(microservice: ExpressJsMicroservice<any, any>): void;
    addCronJob(cronExpr: string, func: () => void): boolean;
}
